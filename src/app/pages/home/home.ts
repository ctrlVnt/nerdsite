import { Component, OnInit, HostListener } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterOutlet } from '@angular/router';
import {MatButtonModule} from '@angular/material/button';
import {MatIconModule} from '@angular/material/icon';
import {MatSidenavModule} from '@angular/material/sidenav';
import {MatCardModule} from '@angular/material/card'; 
import {MatDividerModule} from '@angular/material/divider';
import {MatGridListModule} from '@angular/material/grid-list'; 
import {MatFormFieldModule} from '@angular/material/form-field'; 
import { MatInputModule } from '@angular/material/input';
import {MatListModule} from '@angular/material/list'; 
import { NavbarComponent } from '../../components/navbar/navbar.component'; 
import { ContactformComponent } from '../../components/contactform/contactform.component'; 

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule, RouterOutlet, MatListModule, MatInputModule, MatFormFieldModule, MatGridListModule, MatDividerModule, MatButtonModule, MatIconModule, MatSidenavModule, MatCardModule, NavbarComponent, ContactformComponent],
  templateUrl: './home.html',
  styleUrl: './home.css',
})

export class AppComponent implements OnInit {
  title = 'chiarasava';
  breakpoint: number = 1;
  constructor() { }

  ngOnInit() {
    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;
  }

  onResize(event: Event) {
    this.breakpoint = ((event.target as Window).innerWidth <= 600) ? 1 : 2;
  }

  openSection(sectionId: string){
    const elem = document.getElementById(sectionId);
    if(elem){
      elem.scrollIntoView({behavior: 'smooth'});
    }
  }

  @HostListener('window:scroll', ['$event'])
  onScroll(event : Event) {
    
  }

  aboutme: string = "I am a PhD student in IRMAR (University of Rennes) and Institut Fourier (University of Grenoble Alpes), since September 2021." + '\n' +
            "I work under the supervision of Michel Brion and Matthieu Romagny." +
            " My research is mainly about the geometry of projective homogeneous varieties over fields of positive characteristic." + '\n' +
            "Related subjects I am interested in are birational geometry and representation theory of reductive groups." + '\n' +
            "My first projects were about classifying non-reduced parabolic subgroups in small characteristics." +
            " Here is my CV.";

  formatAboutMe(aboutme: string): string {
    return aboutme.replace(/(?:\r\n|\r|\n)/g, '<br>');
  }
  
  pubblications = [
    { content: [
      '∞-Dold-Kan correspondence via representation theory',
      ' Both Happel and Ladkani proved that, for commutative rings, the quiver An is derived equivalent to the diagram generated by An where any composition of two consecutive arrows vanishes. We give a purely derivator-theoretic reformulation and proof of this result showing that it occurs uniformly across stable derivators and it is then independent of coefficients. The resulting equivalence provi…',
      'https://browse.arxiv.org/abs/2211.00762'
    ]},
    { content: [
      'Equivalent definitions of the preprojective algebra',
      'Following the article of C. M. Ringel we introduce preprojective algebras of a Dynkin quiver Q starting from three definitions which, despite concerning completely different algebraic structures, turn out to be equivalent. Our main result is a new version of Ringel\'s proofs that applies a theorem by Happel and exploits the techniques of homological algebra. Moreover we show that the definition o…',
      'https://browse.arxiv.org/abs/2203.00792'
    ]}
  ];

  upcoming_talks = [
    { content: [
      'Ciao sono...',
      'kjhdbjksbldbckljvn',
      'Ver'
    ]}
  ];

  passed_talks = [
    { content: [
      'saasdsd',
      'dadcas',
      'NA'
    ]},
    { content: [
      'Titolo aaaaa 2',
      'descrizione aaaaa 2',
      'TO'
    ]},
    { content: [
      'sdacasdac',
      'sdcascd',
      'PZ'
    ]}
  ];

  subjects = [
    { content: [
      'Titolo subject 1',
      'descrizione subject 1',
      'link subject 1'
    ]},
    { content: [
      'Titolo subject 2',
      'descrizione subject 2',
      'link subject 2'
    ]},
    { content: [
      'Titolo subject 3',
      'descrizione subject 3',
      'link subject 3'
    ]},
    { content: [
      'Titolo subject 4',
      'descrizione subject 4',
      'link subject 4'
    ]},
    { content: [
      'Titolo subject 5',
      'descrizione subject 5',
      'link subject 5'
    ]}
  ];
    
  links = [
    { content: [
      'Titolo subject 1',
      'descrizione subject 1',
      'link subject 1'
    ]},
    { content: [
      'Titolo subject 2',
      'descrizione subject 2',
      'link subject 2'
    ]},
    { content: [
      'Titolo subject 3',
      'descrizione subject 3',
      'link subject 3'
    ]},
    { content: [
      'Titolo subject 4',
      'descrizione subject 4',
      'link subject 4'
    ]}
  ];
}
